"技术":
  id: C1
  "采用":
    id: A1
    technologies:
      - title: Aggregates as documents
        content: 当设计域模型时，aggregate模式辅助增加结构和模块；映射到关系数据库的aggregate是不可见的；数据库文件，例如MongoDB，支持aggregate as documents模式。1：1的映射意味着从集合中加载的对象应该是aggregate root。
        pic_url:
        url:
        description: 当设计域模型时，aggregate模式辅助增加结构和模块。
      - title: Automated deployment pipeline
        content: 采纳持续交付意味着很多团队正在建立一个自动部署管道(automated deployment pipeline)，用以把他们的代码一直送到产品环境。管道给其他复杂的构建、部署活动链条提供可视化。此外，针对通往产品环境的每一阶段的构建产物，管道为其提供了可靠的跟踪能力。现在，许多厂商都在建立持续集成(CI)服务器，并以管道做为其首要的功能，而不是仅仅提供可视化模块。
        pic_url:
        url:
        description: 自动部署管道(automated deployment pipeline)将团队的代码一直送到产品环境，为复杂的构建、部署活动链条提供可视化。
      - title: Guerrilla testing
        content: Guerrilla testing是一种低成本的测试方法，它可基于目标群众快速验证一个设计的高效程度，以是否可以期望的方式工作，商标和提议是否明确。可被用于服务链中，建立简易，执行和反馈频繁，可频繁使用。
        pic_url: guerrilla.png
        url:
        description:  Guerrilla testing是一种低成本的测试方法，它可基于目标群众快速验证一个设计的可行性和效率。
      - title: In-process acceptance testing
        content: 验收测试一般从外部对系统进行测试，为了整个系统的安全测试遍历整个网络堆栈。进程内验收测试改变了为了达到上述目的，测试代码和应用程序需要在不同的进程中运行的观念。当使用嵌入式容器时，很容易搭建系统，通过HTTP跑测试，并对最终状态进行验证，而省掉了与部署以及同单一容器交流的相关setup cost。
        pic_url:
        url:
        description: 进程内验收测试通过使用嵌入式容器，改变了传统验收测试为了系统安全，测试代码和应用程序在不同的进程中运行的方式。
      - title: Mobile testing on mobile networks
        content: 我们越来越多的看到移动应用在开发和测试过程中工作良好，但在发布出去后却问题多多。移动网络的移动测试(Mobile testing on mobile networks)揭示了应用是如何在不同条件下运行的。你可能需要测试3G，LTE，或者故意使用一个访问超载的糟糕的WiFi网络。先获取目标环境下的网络性能，然后用延迟和丢包诱导工具去模拟相同的环境。此外，使用像Wireshark这样的工具去检测你的设备和软件到底如何使用网络，有时也是必要的。
        pic_url:
        url:
        description: 面对移动应用发布开发、测试过程中工作良好，发布后问题诸多答现象，移动网络的移动测试(Mobile testing on mobile networks)揭示了应用是如何在不同条件下运行的。
      - title: Performance testing as a first-class citizen
        content: 虽然单元测试和验收测试被广泛接受并作为标准的开发实践，但这一趋势还没有延伸到性能测试领域。目前，常用的测试工具促使测试人员养成编写一次性代码，对点击进行脚本化的心态。给予性能测试一等公民待遇，可以创造更好的测试，涵盖了更多的功能，引导出更好的工具来创建和运行性能测试，从而使得测试套件可以被维护，并能自我测试。
        pic_url:
        url:
        description: 给予性能测试一等公民待遇，可以创造更好的测试，涵盖了更多的功能，引导出更好的工具来创建和运行性能测试，从而使得测试套件可以被维护，并能自我测试。
      - title: Promises for asynchronous programming
        content: 使用Promise进行异步编程是一项古老的技术，也被称为futures。由于JavaScript在客户端和服务器端的的广泛使用，它又再次得到了关注。这项技术消除了深层嵌套回调、标志位和轮询，同时得到了像jQuery库的一等支持。如果项目涉及到非常复杂的JavaScript代码库，团队就应该利用这项技术。
        pic_url:
        url:
        description: 随着JavaScript在客户端和服务器端的广泛使用，Promise——一项古老的异步编程的技术又再次得到了关注。
      - title: Windows infrastructure automation
        content: 以前，像Chef和Puppet这样的工具都缺乏对Windows的支持，导致构建简单的基础设施自动化任务都需要大量的Powershell脚本。所以，想要使Windows到达和Unix一样的自动化水平可谓困难重重。不过在过去的一年里，Chef和Puppet对Windows的支持得到了很大改善。这种支持与强大的PowerShell相结合，使得Windows基础设施自动化极为可行。
        pic_url: puppet.png
        url:
        description: 在过去的一年里，Chef和Puppet对Windows的支持得到了很大改善。这种支持与强大的PowerShell相结合，使得Windows基础设施自动化极为可行。

  "尝试":
    id: A2
    technologies:
      - title: Analyzing test runs
        content: 失败的测试揭示了产品代码中的bug。然而，针对其他属性进行分析性测试则可以揭示一些有趣的信息。一个简单的例子是监测频繁失败的测试，然后在构建管道中尽早运行它们，从而快速得到反馈。同理，跟踪其他属性，如测试执行时间和耗时测试的比例，也可以为达成快速测试提供可操作的指标。
        pic_url:
        url:
        description: 失败的测试揭示了产品代码中的bug，针对其他属性的分析性测试更揭示了一些有趣的信息。
      - title: Blue-green deployment
        content: 蓝绿部署(Blue-green deployment)是一种执行软件升级的模式。首先，将最新版本的应用部署到一个和当前产品环境完全一样的应用栈副本中。这样，当新版本的应用通过了相应的测试并得到了业务上的许可后，访问就可以被瞬间切换这个新版本的应用上。尽管这不是一项新技术，但基础设施自动化和云端资源使它值得被重新考虑。
        pic_url:
        url:
        description: 蓝绿部署(Blue-green deployment)是一种执行软件升级的模式。基础设施自动化和云端资源使它值得被重新考虑。
      - title: Co-location by telepresence
        content: 廉价或免费的视频会议工具，质量正在不断改善，选择也越来越多，让分布式团队有了一种全新的工作方式。即便团队分散在各地，全天候(Always-on)视频连通也可以帮助建立一种虚拟的临场感。事实上，这已经成为我们部分离岸交付中心的标配。我们还看到像ScreenHero这样的屏幕共享工具已经开始被广泛用于远程结对编程。但我们也必须警惕寻找银弹消除物理上同处一地的需求，毕竟没有什么可以替代面对面沟通时所产生的相互理解和情感交流。
        pic_url:
        url:
        description: 廉价或免费的视频会议工具，质量正在不断改善，选择也越来越多，让分布式团队有了一种全新的工作方式。
      - title: Continuous delivery for mobile devices
        content: 随着HTML5模糊了传统本地应用和Web应用程序之间的界线，我们正开始试验移动设备上的持续交付。如TestFlight服务可让你在一天内多次部署本地应用程序到实际设备上。对于全部或部分基于HTML5的应用程序，可以直接部署修改，而无需向应用商店提交一个新的应用。如果你的组织有企业内应用程序商店，就可以轻松的发布应用。我们注意到，当移动设备上的持续交付技术实现不断改进时，测试实践则相对落后。要取得成功，你需要更加专注于自动化测试，以确保应用被部署到设备上时能够正常工作。
        pic_url:
        url:
        description: 随着HTML5模糊了传统本地应用和Web应用程序之间的界线，我们正开始试验移动设备上的持续交付。
      - title: Database migrations for NoSQL
        content: NoSQL数据存储正继续成为主流，但团队需要充分认识到对迁移数据库到NoSQL的需求。特别是使用隐式或动态schema，你可能会随着时间的推移需要重新配置数据。这里提供了几种方法：比如在部署新版本应用时进行显式地迁移，或者通过代码在加载和处理文档时进行动态迁移。
        pic_url:
        url:
        description: NoSQL数据存储正继续成为主流，但团队需要充分认识到对迁移数据库到NoSQL的需求。
      - title: Edge Side Includes for page composition
        content: Edge Side Includes是一种简单标记语言，用于定义动态内容网页的构成成分以及互联网边缘的网站应用程序的分发。ESI标识语言提供了一种内容管理机制，这些内容包括应用程序服务器解决方案、内容管理系统，以及内容传送网络。因此，ESI让公司能够进行网站应用的一次性开发，并在安装应用程序时，选择好内容管理系统、应用服务器或内容分发网络的配置时间，这样就可降低复杂性、开发时间和配置成本。从micro-service上打破单一应用和building系统，需要一个坚实的策略来将不同单一系统的输出整合到一个连贯的终端用户体验。使用Edge Side Includes表示页面组成，是一种实用而优雅的解决方案。使用类似Varnish的反向代理或更贴近用户的CDN即可实现。
        pic_url:
        url:
        description: Edge Side Includes是一种简单标记语言，用于定义动态内容网页的构成成分以及互联网边缘的网站应用程序的分发。
      - title: HTML5 storage instead of cookies
        content: HTML5存储，也被称为本地存储或Web存储，是一种在现代浏览器里存储客户端数据的机制，其中也包括iOS和Android移动浏览器。在几乎所有情况下，我们都建议使用HTML5存储，而不是cookie。HTML5存储，最多可容纳5MB的数据，而cookie则被限制在4KB。Cookie的数据在每一次请求中都会被发送，这会拖慢你的应用程序，并且有可能将数据暴露于不安全的HTTP连接中。与此相反，HTML5存储只需要由浏览器来保证数据安全。Cookie则只应该用来保存像session id这样的简单数据。
        pic_url: html5.png
        url:
        description: HTML5存储，也被称为本地存储或Web存储，是一种在现代浏览器里存储客户端数据的机制，其中也包括iOS和Android移动浏览器。
      - title: Logs as data
        content: Logs as data是通过STDOUT将半结构化数据写入你的应用日志，之后Logs可被用作向导，长期趋势分析，自动缩放，异常检测和阈值报警。Logs as data作为数据向导较直接仪表的好处在于：您的应用无需依赖任何额外的数据库；No CPU cost to your dyno by in-app instrumentation；可直接读取Logs，具有自我检测机制；无需改变应用代码，Metrics backends can be swapped out；支持多分支的日志流发送到多个后端，得到对一个日志数据的不同评判和提醒。
        pic_url:
        url:
        description: Logs as data是通过STDOUT将半结构化数据写入你的应用日志，之后Logs可被用作向导，长期趋势分析，自动缩放，异常检测和阈值报警。
      - title: Micro-services
        content: Micro-services是一种小的，明确的，执行特定任务的程序/函数，Micro-services由系统程序员和应用程序员开发并编译成iRODS服务器代码，用户和管理员可以链接这些Micro-services实现更大的功能，提供给其他人。这些大功能被成为行为，一个行为与Micro-services的多个链接可使系统采用多种方法执行行为，系统需选取最好的Micro-service链执行。
        pic_url:
        url:
        description: Micro-services是一种小的，明确的，执行特定任务的程序/函数，用户和管理员可以链接Micro-services实现更大的功能，提供给其他人。
      - title: Mobile first
        content: Mobile first是网站应用应该先在移动设备上开发的理念，网站应用只包含用户使用最频繁的功能，随着屏幕的增大，根据用户需求的优先级增加应用。Mobile first的理念与使用W3C CCS3 media queries的响应式网页设计的理念相关。
        pic_url:
        url:
        description: Mobile first是网站应用先在移动设备上开发的理念，网站应用只包含用户使用最频繁的功能。
      - title: Perimeterless enterprise
        content: 技术趋势已经冲破了原本保护着企业IT网络的围墙，成为没有边界的企业。员工们频繁使用自己的消费设备通过云服务和web api访问企业数据，而企业往往对此并不知情。随着设备不断扩散以及更多的应用程序迁移到云端，迫使企业重新考虑数据访问和网络安全的基本假设。
        pic_url:
        url:
        description: 随着设备不断扩散以及更多的应用程序迁移到云端，迫使企业重新考虑数据访问和网络安全的基本假设。
      - title: Responsive web design
        content: 响应式网页设计(Responsive web design)是一种网页网页设计技术做法，该设计可使网站在多种浏览设备上阅读和导航，同时减少缩放、平移和滚动，采用RWD设计的网站采用CSS3 Media queries,即一种对@media规则的扩展，以及流式的基于比例的网格和自适应大小的图像以适应不同大小的设备,所有的图片字体模块都会根据你的变化而变化。
        pic_url:
        url:
        description: 响应式网页设计(Responsive web design)是一种网页网页设计技术做法，该设计可使网站在多种浏览设备上阅读和导航，所有的图片字体模块都会根据你的变化而变化。
      - title: Semantic monitoring
        content: 在以前的雷达中，我们曾经建议延长自动化验收测试的周期，在我们称之为语义监控(semantic monitoring)的阶段，不断在产品环境中运行这些测试。现在我们仍然相信，这是一项使团队可以提前预测情况的重要技术。但现在，尤其是在初创公司中，我们还看到这种方法的一个变体，就是在减少测试次数的同时，增加监控与自动报警。这使关注点从避免可预见的问题转移到对所有问题减少平均的恢复时间。
        pic_url:
        url:
        description: 在以前的雷达中，我们曾经建议延长自动化验收测试的周期，在我们称之为语义监控(semantic monitoring)的阶段，不断在产品环境中运行这些测试。

  "接近":
    id: A3
    technologies:
      - title: Capturing client-side JavaScript errors
        content: 捕获客户端JavaScript错误，已经被我们的交付团队用来识别与浏览器或插件配置相关的影响用户体验的问题。在过去一年中，一些服务提供商业已开始对这一需求提供支持。除了将这些错误储存于应用数据存储中，一些Web应用还会将这些错误记录到网络分析工具，或像New Relic这样监测工具中，以减轻存储的需求。
        pic_url:
        url:
        description: 捕获客户端JavaScript错误，已经被我们的交付团队用来识别与浏览器或插件配置相关的影响用户体验的问题。
      - title: Collaborative analytics and data science
        content: 多年来，团队和组织都已经看到了围绕技术学科进行专业细分的危险性。当我们就高级应用听取专家的建议时，开发人员至少应当了解用户界面，数据库和数据科学等业界新宠的基础知识。当高级应用需要深入的专业知识时，我们要在所有开发人员使用基础统计分析理论和工具的领域，推动协作分析与数据科学，以此做出更好的决策，并在事情愈趋复杂时，开展与专家的密切合作。
        pic_url:
        url:
        description: 开发人员使用基础统计分析理论和工具的领域，推动协作分析与数据科学，以做出更好的决策，并在事情愈趋复杂时，开展与专家的密切合作。
      - title: Development environments in the cloud
        content: 在云端搭建的开发环境意味着开发的基础设施能够外包，开发人员只需要一台笔记本电脑和网络连接。通过组合使用最佳的服务，如GitHub的私有资料库加上云端的Snap CI持续集成环境，你的团队也许永远都不再需要为自建IT基础设施而劳神了。
        pic_url:
        url:
        description: 在云端搭建的开发环境意味着开发的基础设施能够外包，组合使用最佳的服务。
      - title: Focus on mean time to recovery
        content: 在以前的雷达中，我们曾经建议延长自动化验收测试的周期，在我们称之为语义监控(semantic monitoring)的阶段，不断在产品环境中运行这些测试。现在我们仍然相信，这是一项使团队可以提前预测情况的重要技术。但现在，尤其是在初创公司中，我们还看到这种方法的一个变体，就是在减少测试次数的同时，增加监控与自动报警。这使关注点从避免可预见的问题转移到对所有问题减少平均的恢复时间。
        pic_url:
        url:
        description: 在减少测试次数的同时，增加监控与自动报警，使关注点从避免可预见的问题转移到对所有问题减少平均的恢复时间。
      - title: Machine image as a build artifact
        content: 多数虚拟化技术都提供了通过加载镜像启动虚拟机的方法。在构建管道中要尽早创建虚拟机镜像作为构建产物，随着它通过后续的测试套件对其进行提升，如此就能实现从测试环境到产品环境机器上的可靠部署。此技术剔除了导致snowflake server*(注释)反模式的多数原因。
        pic_url:
        url:
        description: 多数虚拟化技术都提供了通过加载镜像启动虚拟机的方法。
      - title: Minimizing application configuration
        content: 一旦开始使用一件全新的工具，管理不同环境的部署，或者尝试着理解应用程序的行为为何在不同环境表现各异，对应用的配置就会成为痛苦的根源。作为最小化应用配置的拥趸，我们正尝试去保证应用能在最小配置下能够正常工作。
        pic_url:
        url:
        description: 作为最小化应用配置的拥趸，我们正尝试去保证应用能在最小配置下能够正常工作。

  "保留":
    id: A4
    technologies:
      - title: Exhaustive browser based testing
        content: 我们之前谈过在应用程序层执行自动化测试，在此技术雷达中，我们明确不推荐详尽的浏览器测试。浏览器自动化测试工具，比如Selenium，鼓励广泛的浏览器自动化测试。虽然这些测试在测试领域仍占有一席之地，但是，大部分团队发现，通过浏览器执行散乱测试会造成缓慢而脆弱的测试套件。
        pic_url:
        url:
        description: 在此技术雷达中，我们明确不推荐详尽的浏览器测试。
